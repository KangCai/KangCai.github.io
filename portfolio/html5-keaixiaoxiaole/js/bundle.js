var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var MissionView_1 = require("./combat/MissionView");
var ScoreBoard_1 = require("./combat/ScoreBoard");
var Playground_1 = require("./combat/Playground");
var TimeBar_1 = require("./combat/TimeBar");
var Combat_1 = require("./combat/Combat");
var LevelUp_1 = require("./combat/LevelUp");
var Replay_1 = require("./combat/Replay");
var Settlement_1 = require("./combat/Settlement");
var Info_1 = require("./common/Info");
var BtnStart_1 = require("./entry/BtnStart");
var Entry_1 = require("./entry/Entry");
var InfoStatistic_1 = require("./entry/InfoStatistic");
var infoLevel_1 = require("./entry/infoLevel");
var ownerInfoLevel_1 = require("./entry/ownerInfoLevel");
var Shop_1 = require("./shop/Shop");
var Wx_1 = require("./wx/Wx");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("combat/MissionView.ts", MissionView_1.default);
        reg("combat/ScoreBoard.ts", ScoreBoard_1.default);
        reg("combat/Playground.ts", Playground_1.default);
        reg("combat/TimeBar.ts", TimeBar_1.default);
        reg("combat/Combat.ts", Combat_1.default);
        reg("combat/LevelUp.ts", LevelUp_1.default);
        reg("combat/Replay.ts", Replay_1.default);
        reg("combat/Settlement.ts", Settlement_1.default);
        reg("common/Info.ts", Info_1.default);
        reg("entry/BtnStart.ts", BtnStart_1.default);
        reg("entry/Entry.ts", Entry_1.default);
        reg("entry/InfoStatistic.ts", InfoStatistic_1.default);
        reg("entry/infoLevel.ts", infoLevel_1.default);
        reg("entry/ownerInfoLevel.ts", ownerInfoLevel_1.default);
        reg("shop/Shop.ts", Shop_1.default);
        reg("wx/Wx.ts", Wx_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "showall";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "entry/entry.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./combat/Combat":3,"./combat/LevelUp":4,"./combat/MissionView":5,"./combat/Playground":6,"./combat/Replay":7,"./combat/ScoreBoard":8,"./combat/Settlement":9,"./combat/TimeBar":10,"./common/Info":11,"./entry/BtnStart":14,"./entry/Entry":15,"./entry/InfoStatistic":16,"./entry/infoLevel":17,"./entry/ownerInfoLevel":18,"./shop/Shop":19,"./wx/Wx":21}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("../data/Consts");
var Player_1 = require("../data/Player");
var Combat = /** @class */ (function (_super) {
    __extends(Combat, _super);
    function Combat() {
        return _super.call(this) || this;
    }
    Combat.prototype.onEnable = function () {
        // 初始化全局变量
        this._initGlobalVariable();
        // 部件获取
        this._scene = this.owner;
        this._btnRefresh = this.owner.getChildByName('btnRefresh');
        this._btnRefresh.on(Laya.Event.CLICK, this, this._clickRefresh);
        // 播放音乐
        laya.media.SoundManager.playMusic('custom/combat_bg.mp3');
    };
    Combat.prototype.onUpdate = function () {
        if (Consts_1.Global.combatStates == Consts_1.CombatStates.Prepare) {
            Consts_1.Global.combatStates = Consts_1.CombatStates.Playing;
        }
        // console.log('XXX', Global.timeUp, Global.freezeCount, Global.combatStates, CombatStates.Playing);
        if (Consts_1.Global.timeUp && Consts_1.Global.freezeCount == 0 && Consts_1.Global.canOperate &&
            Consts_1.Global.combatStates == Consts_1.CombatStates.Playing) {
            this._showSettlement();
            Consts_1.Global.combatStates = Consts_1.CombatStates.Settlement;
        }
        //
        if (Consts_1.Global.canOperate) {
            this._btnRefresh.disabled = false;
        }
        else {
            this._btnRefresh.disabled = true;
        }
    };
    Combat.prototype.onDisable = function () {
    };
    Combat.prototype._initGlobalVariable = function () {
        Consts_1.Global.init();
        Consts_1.Global.statisticLeftTurns = Player_1.default.getInstance().missionTurns;
    };
    Combat.prototype._btnBackToEntry = function () {
        Laya.Scene.open('entry/entry.scene', true);
    };
    Combat.prototype._showSettlement = function () {
        Laya.Scene.close('combat/replay.scene');
        Laya.Scene.open('combat/settlement.scene', false);
    };
    Combat.prototype._clickRefresh = function () {
        Laya.stage.event(Consts_1.Events.COMBAT_REFRESH);
    };
    return Combat;
}(Laya.Script));
exports.default = Combat;
},{"../data/Consts":12,"../data/Player":13}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("../data/Consts");
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyDialogUI = layaMaxUI_1.ui.combat.levelUpUI;
var LevelUp = /** @class */ (function (_super) {
    __extends(LevelUp, _super);
    function LevelUp() {
        return _super.call(this) || this;
    }
    LevelUp.prototype.onOpened = function (param) {
        var levelStageBefore, levelStageAfter;
        levelStageBefore = param[0], levelStageAfter = param[1];
        this.iconBefore.skin = Consts_1.Consts.LEVEL_ICON[levelStageBefore];
        this.nameBefore.text = Consts_1.Consts.LEVEL_NAME[levelStageBefore];
        this.nameBefore.color = Consts_1.Consts.LEVEL_COLOR[levelStageBefore];
        this.upType.skin = Consts_1.Consts.UP_TYPE[levelStageAfter];
        this.iconAfter.skin = Consts_1.Consts.LEVEL_ICON[levelStageAfter];
        this.nameAfter.text = Consts_1.Consts.LEVEL_NAME[levelStageAfter];
        this.nameAfter.color = Consts_1.Consts.LEVEL_COLOR[levelStageAfter];
        this.btnClose.on(Laya.Event.CLICK, this, this._clickClose);
    };
    LevelUp.prototype._clickClose = function () {
        this.close();
    };
    return LevelUp;
}(MyDialogUI));
exports.default = LevelUp;
},{"../data/Consts":12,"../ui/layaMaxUI":20}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Player_1 = require("./../data/Player");
var Consts_1 = require("./../data/Consts");
var MissionView = /** @class */ (function (_super) {
    __extends(MissionView, _super);
    function MissionView() {
        var _this = _super.call(this) || this;
        // 任务进度
        _this._missionDict = {};
        _this._missionImageDict = {};
        return _this;
    }
    MissionView.prototype.onEnable = function () {
        Laya.stage.on(Consts_1.Events.COMBAT_COMPLETE_TASK, this, this._completeTask);
        this._onLoaded();
    };
    MissionView.prototype.onDisable = function () {
    };
    MissionView.prototype._completeTask = function (fruitIdx) {
        if (this._missionDict[fruitIdx] == undefined || this._missionImageDict[fruitIdx] == undefined)
            return;
        if (this._missionDict[fruitIdx] <= 0)
            return;
        this._missionDict[fruitIdx]--;
        var board = this._missionImageDict[fruitIdx];
        if (this._missionDict[fruitIdx] == 0) {
            var turnsText = board.getChildByName('text');
            turnsText.text = String(this._missionDict[fruitIdx]);
        }
        else {
            var turnsText = board.getChildByName('text');
            turnsText.text = String(this._missionDict[fruitIdx]);
        }
        for (var key in this._missionDict) {
            var idx = Number(key);
            if (idx == fruitIdx)
                continue;
            if (this._missionDict[fruitIdx] < this._missionDict[idx])
                return;
        }
        Laya.stage.event(Consts_1.Events.COMBAT_MISSION, [this._missionDict[fruitIdx]]);
    };
    MissionView.prototype._onLoaded = function () {
        // 随机任务
        var missionCount = 6;
        var seq = [];
        for (var i = 0; i < 7; i++) {
            seq.push(i);
        }
        var FRUIT_LEN = Consts_1.Consts.FruitURLArray.length;
        for (var i = 0; i < missionCount; i++) {
            var idx = Math.floor(Math.random() * (FRUIT_LEN - i));
            // 与最后一位交换
            var tmp = seq[FRUIT_LEN - i - 1];
            seq[FRUIT_LEN - i - 1] = seq[idx];
            seq[idx] = tmp;
        }
        seq = seq.slice(FRUIT_LEN - missionCount, FRUIT_LEN).sort();
        // 生成任务 seq.length = missionLv
        // 获取组件
        this._missionView = this.owner;
        var width = this._missionView.width;
        var height = this._missionView.height;
        var unitW = width / 3.0;
        var unitH = height / 2.0;
        var unitLen = Math.min(unitW, unitH);
        var filter = new Laya.GlowFilter('#a39a9a', 2, 0, 0);
        for (var i = 0; i < seq.length; i++) {
            var count_w = i % 3;
            var count_h = Math.floor(i / 3);
            var furitIdx = seq[i];
            // 加载任务
            var mission = new Laya.Image(Consts_1.Consts.GetFruitURL(furitIdx));
            console.log(mission);
            this._missionView.addChild(mission);
            mission.width = mission.height = unitLen;
            mission.anchorX = mission.anchorY = 0.5;
            mission.pos(unitW * (count_w + 0.5), unitH * (count_h + 0.5));
            mission.filters = [filter];
            // 加载任务轮次背景
            var turns = new Laya.Image(Consts_1.Consts.TurnsURL);
            mission.addChild(turns);
            turns.width = turns.height = unitLen * 0.6;
            turns.anchorX = turns.anchorY = 0.5;
            turns.pos(unitLen * 0.2, unitLen * 0.9);
            this._missionImageDict[furitIdx] = turns;
            // 加载任务轮次
            var turnsText = new Laya.Text();
            this._missionDict[furitIdx] = Player_1.default.getInstance().missionTurns;
            turnsText.text = String(this._missionDict[furitIdx]);
            turns.addChild(turnsText);
            turnsText.width = turnsText.height = 0;
            turnsText.pos(turns.width * 0.28, turns.height * 0.36);
            turnsText.fontSize = 16;
            turnsText.bold = true;
            turnsText.name = 'text';
        }
    };
    return MissionView;
}(Laya.Script));
exports.default = MissionView;
},{"./../data/Consts":12,"./../data/Player":13}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./../data/Consts");
var Player_1 = require("../data/Player");
var playground = /** @class */ (function (_super) {
    __extends(playground, _super);
    function playground() {
        var _this = _super.call(this) || this;
        // 按钮缓存相关的属性
        _this._fruitBtnCache = [];
        _this._validIdxList = [];
        // 坐标 -> 按钮 映射矩阵
        _this._fruteMap = [];
        // playground 基本属性
        _this.COUNT_W = 7;
        _this.COUNT_H = 8;
        // 连击次数
        _this._comboCount = 0;
        // 刷新数目
        _this._refreshCount = 0;
        return _this;
    }
    playground.prototype.onEnable = function () {
        this.onLoaded();
    };
    playground.prototype.onDisable = function () {
    };
    playground.prototype.onLoaded = function () {
        this._playergroundView = this.owner;
        this._xScoreTo = this._playergroundView.width * 0.80;
        this._yScoreTo = this._playergroundView.height * 1.20;
        var btn;
        // 1. 建一个缓存池
        var btnList;
        // 计算相关参数
        this.unitW = this._playergroundView.width / this.COUNT_W;
        this.unitH = this._playergroundView.height / this.COUNT_H;
        this.unitLen = Math.min(this.unitW, this.unitH);
        // 水果种类
        var filter = new Laya.GlowFilter('#6e6262', 3, 0, 3);
        for (var i = 0; i < Consts_1.Consts.FruitURLArray.length; i++) {
            btnList = [];
            // 每种水果的缓存数
            for (var j = 0; j < 20; j++) {
                btn = new Laya.Button(Consts_1.Consts.FruitURLArray[i]);
                btn.width = btn.height = this.unitLen;
                btn.stateNum = 1;
                btn.anchorX = btn.anchorY = 0.5;
                btn.filters = [filter];
                btnList.push(btn);
            }
            this._fruitBtnCache.push(btnList);
        }
        for (var i = 0; i < this._fruitBtnCache.length; i++) {
            this._validIdxList.push(i);
        }
        // 2. 初始化场景
        for (var i = 0; i < this.COUNT_W; i++) {
            this._fruteMap.push([]);
        }
        // 3. 全局监听
        this._playergroundView.on(Laya.Event.MOUSE_DOWN, this, this._DragStart);
        this._playergroundView.on(Laya.Event.MOUSE_UP, this, this._DragEnd);
        this._playergroundView.on(Laya.Event.MOUSE_OUT, this, this._DragEnd);
        Laya.stage.on(Consts_1.Events.COMBAT_REFRESH, this, this._Refresh);
        this._InitFruitRandomly();
    };
    playground.prototype._Refresh = function () {
        Consts_1.Global.canOperate = false;
        laya.media.SoundManager.playSound(Consts_1.Consts.SOUND_REFRESH, 1);
        this._refreshCount = 0;
        for (var i = 0; i < this.COUNT_W; i++) {
            for (var j = 0; j < this.COUNT_H; j++) {
                var btn = this._fruteMap[i][j];
                this._RemoveFruit(btn);
            }
        }
        this._InitFruitRandomly();
        this._addRefreshBornAnim();
    };
    playground.prototype._addRefreshBornAnim = function () {
        Consts_1.Global.canOperate = false;
        this._refreshCount = 0;
        for (var i = 0; i < this.COUNT_W; i++) {
            for (var j = 0; j < this.COUNT_H; j++) {
                var btn = this._fruteMap[i][j];
                this._refreshCount += 1;
                var xFrom = this._ItoX(i);
                var yFrom = this._JtoY(j) - this.COUNT_H * this.unitH;
                var props = { x: xFrom, y: yFrom, complete: Laya.Handler.create(this, this._onCompleteRefreshPos, [btn]) };
                Laya.Tween.from(btn, props, this.COUNT_H * 200);
            }
        }
    };
    playground.prototype._onCompleteRefreshPos = function () {
        this._refreshCount -= 1;
        if (this._refreshCount <= 0) {
            this._refreshCount = 0;
            Consts_1.Global.canOperate = true;
        }
    };
    playground.prototype._InitFruitRandomly = function () {
        Consts_1.Global.canOperate = false;
        for (var i = 0; i < this.COUNT_W; i++) {
            for (var j = 0; j < this.COUNT_H; j++) {
                this._GenRandomFruit(i, j);
            }
        }
        while (this._CheckResult(0) > 0) {
            ;
        }
        Consts_1.Global.canOperate = true;
    };
    playground.prototype._DragStart = function () {
        // 冻结操作期间 或者 时间到，则点按钮无效
        if (Consts_1.Global.freezeCount > 0 || Consts_1.Global.timeUp || !Consts_1.Global.canOperate) {
            return;
        }
        // 刷新连击次数
        this._comboCount = 0;
        this._playergroundView.on(Laya.Event.MOUSE_MOVE, this, this._DragMove);
        var x = this._playergroundView.mouseX, y = this._playergroundView.mouseY;
        var i = this._XtoI(x), j = this._YtoJ(y);
        this._lockedTarget = this._fruteMap[i][j];
        this._lockedTarget.scale(1.25, 1.25);
        this._exchangeTarget = undefined;
    };
    playground.prototype._DragMove = function () {
        var x = this._playergroundView.mouseX, y = this._playergroundView.mouseY;
        var iFrom = this._lockedTarget.tag[1], jFrom = this._lockedTarget.tag[2];
        var xFrom = this._ItoX(iFrom), yFrom = this._JtoY(jFrom);
        var xDelta = x - xFrom, yDelta = y - yFrom;
        var iDelta = 0, jDelta = 0;
        if (Math.abs(xDelta) >= Math.abs(yDelta)) {
            if (Math.abs(xDelta) > this.unitW / 2.0) {
                iDelta = Math.round(xDelta / Math.abs(xDelta));
            }
        }
        else {
            if (Math.abs(yDelta) > this.unitH / 2.0) {
                jDelta = Math.round(yDelta / Math.abs(yDelta));
            }
        }
        if (iDelta == 0 && jDelta == 0) {
            return;
        }
        var i = iFrom + iDelta, j = jFrom + jDelta;
        if (i < 0 || i >= this.COUNT_W || j < 0 || j >= this.COUNT_H) {
            // console.log('>????', i, j, this.COUNT_W, this.COUNT_H);
            return;
        }
        this._exchangeTarget = this._fruteMap[i][j];
        this._BtnMoveTo(this._lockedTarget, i, j, 200);
        this._BtnMoveTo(this._exchangeTarget, iFrom, jFrom, 200);
        Consts_1.Global.canOperate = false;
        this._DragEnd();
    };
    playground.prototype._DragEnd = function () {
        if (this._lockedTarget)
            this._lockedTarget.scale(1.0, 1.0);
        this._playergroundView.off(Laya.Event.MOUSE_MOVE, this, this._DragMove);
    };
    playground.prototype._CheckResult = function (duration) {
        if (duration === void 0) { duration = 500; }
        var btnList = [];
        var btnGroupList = [];
        // 递归标记二维数组
        var flag = [];
        for (var i = 0; i < this.COUNT_W; i++) {
            flag.push([]);
        }
        var centerX, centerY;
        for (var i = 0; i < this.COUNT_W; i++) {
            for (var j = 0; j < this.COUNT_H; j++) {
                var btn = this._fruteMap[i][j];
                var tempBtnList = [];
                this._GetNeighbour(btn.tag[0], btn.tag[1], btn.tag[2], tempBtnList, flag);
                // 判断至少3连通才消除
                if (tempBtnList.length < 3) {
                    continue;
                }
                // 记录 btnList， 以及 btnGroupList
                centerX = centerY = 0;
                for (var k = 0; k < tempBtnList.length; k++) {
                    btn = tempBtnList[k];
                    centerX += btn.x;
                    centerY += btn.y;
                    btnList.push(btn);
                }
                centerX /= tempBtnList.length;
                centerY /= tempBtnList.length;
                btnGroupList.push([btn.tag[0], tempBtnList.length, centerX, centerY]);
            }
        }
        if (btnList.length == 0) {
            if (this._lockedTarget && this._exchangeTarget) {
                var i1 = this._lockedTarget.tag[1], j1 = this._lockedTarget.tag[2];
                var i2 = this._exchangeTarget.tag[1], j2 = this._exchangeTarget.tag[2];
                this._BtnMoveTo(this._lockedTarget, i2, j2, 100);
                this._BtnMoveTo(this._exchangeTarget, i1, j1, 100);
            }
            this._lockedTarget = this._exchangeTarget = undefined;
            return 0;
        }
        // 连击次数+1
        this._comboCount++;
        this._lockedTarget = this._exchangeTarget = undefined;
        // 根据消除列表计算一下需要移动的信息
        var curMoveInfo = [];
        var additionMoveInfo = [];
        for (var i = 0; i < this.COUNT_W; i++) {
            curMoveInfo.push([]);
        }
        for (var i = 0; i < btnList.length; i++) {
            var btn = btnList[i];
            curMoveInfo[btn.tag[1]][btn.tag[2]] = -1;
        }
        for (var i = 0; i < this.COUNT_W; i++) {
            var delCount = 0;
            for (var j = this.COUNT_H - 1; j >= 0; j--) {
                if (curMoveInfo[i][j] == -1) {
                    delCount++;
                }
                else {
                    curMoveInfo[i][j] = delCount;
                }
            }
            additionMoveInfo[i] = delCount;
        }
        // 播放消去水果的动画
        if (duration > 0) {
            Laya.timer.once(400, this, this._onPlaySound, [btnList[0].tag[0]]);
        }
        Consts_1.Global.freezeCount += btnList.length;
        for (var i = 0; i < btnList.length; i++) {
            var btn = btnList[i];
            if (duration > 0) {
                var props = { scaleX: 1.2, scaleY: 1.2, complete: Laya.Handler.create(this, this._onCompleteBoom, [btn, btnList.length, duration, curMoveInfo, additionMoveInfo, btnGroupList]) };
                Laya.Tween.to(btn, props, 400);
            }
            else {
                this._onCompleteBoom(btn, btnList.length, duration, curMoveInfo, additionMoveInfo, btnGroupList);
            }
        }
        return btnList.length;
    };
    playground.prototype._onPlaySound = function (fruiteIdx) {
        laya.media.SoundManager.playSound(Consts_1.Consts.SOUND_BOMB_LIST[fruiteIdx], 1);
    };
    playground.prototype._onCompleteBoom = function (btn, btnListLength, duration, curMoveInfo, additionMoveInfo, btnGroupList) {
        // 任务完成+1
        if (duration > 0) {
            var fruiteIdx = btn.tag[0];
            Laya.stage.event(Consts_1.Events.COMBAT_COMPLETE_TASK, [fruiteIdx]);
        }
        // 去除消去的水果
        this._RemoveFruit(btn);
        // 锁定数-1
        Consts_1.Global.freezeCount--;
        if (Consts_1.Global.freezeCount > 0)
            return;
        // 上面的水果向下夯实
        for (var i = 0; i < this.COUNT_W; i++) {
            for (var j = this.COUNT_H - 1; j >= 0; j--) {
                if (curMoveInfo[i][j] > 0) {
                    var btn_1 = this._fruteMap[i][j];
                    this._BtnMoveTo(btn_1, i, j + curMoveInfo[i][j], duration);
                }
            }
        }
        // 新增水果向下夯实
        for (var i = 0; i < this.COUNT_W; i++) {
            for (var j = 0; j < additionMoveInfo[i]; j++) {
                var btn_2 = this._GenRandomFruit(i, -j - 1);
                this._BtnMoveTo(btn_2, i, additionMoveInfo[i] - j - 1, duration);
            }
        }
        // 发送结算消息
        if (duration > 0) {
            // 记录最大连击数
            Consts_1.Global.statisticMaxComboCount = Math.max(Consts_1.Global.statisticMaxComboCount, this._comboCount);
            // 获取额外时间
            var extraTime = Player_1.default.getInstance().extraTimeLvRatio * btnGroupList.length;
            Laya.stage.event(Consts_1.Events.COMBAT_EXTRA_TIME, extraTime);
            // 飞基础分
            for (var i = 0; i < btnGroupList.length; i++) {
                var _a = btnGroupList[i], fruitIdx = _a[0], fruitCount = _a[1], centerX = _a[2], centerY = _a[3];
                var scoreBase = fruitCount * 10 * Player_1.default.getInstance().getFruitLvRatio(fruitIdx);
                this._showScoreText(scoreBase, centerX, centerY, undefined);
                Consts_1.Global.statisticBasicScore += scoreBase;
            }
            // 显示连击分
            if (this._comboCount > 1) {
                var scoreCombo = (this._comboCount - 1) * 10 * Player_1.default.getInstance().comboLvRatio;
                this._showScoreText(scoreCombo, this._playergroundView.width / 2.0, this._playergroundView.height / 2.0, this._comboCount);
                Consts_1.Global.statisticComboScore += scoreCombo;
            }
        }
    };
    playground.prototype._createScoreText = function () {
        var text = new Laya.Text();
        text.fontSize = 30;
        text.bold = true;
        text.alpha = 0.6;
        return text;
    };
    playground.prototype._createComboText = function () {
        var text = new Laya.Text();
        text.fontSize = 80;
        text.bold = true;
        text.alpha = 0.8;
        return text;
    };
    playground.prototype._showScoreText = function (scoreAdd, xFrom, yFrom, comboCount) {
        Laya.stage.event(Consts_1.Events.COMBAT_ADD_SCORE, [scoreAdd]);
        // 得分 Message
        if (!comboCount) {
            var text = Laya.Pool.getItemByCreateFun('scoreText', this._createScoreText, this);
            this._playergroundView.addChild(text);
            text.text = '+' + String(scoreAdd);
            text.pos(xFrom, yFrom);
            var props = { x: xFrom, y: yFrom - 50, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, this._onScoreRised, [text, scoreAdd]) };
            Laya.Tween.to(text, props, 500);
        }
        // 连击 Message
        else if (comboCount > 1) {
            var comboText = Laya.Pool.getItemByCreateFun('scoreComboText', this._createComboText, this);
            this._playergroundView.addChild(comboText);
            comboText.text = 'Combo ' + String(comboCount);
            if (comboCount < Consts_1.Consts.COMBO_COLOR.length)
                comboText.color = Consts_1.Consts.COMBO_COLOR[comboCount];
            else
                comboText.color = Consts_1.Consts.COMBO_COLOR[Consts_1.Consts.COMBO_COLOR.length - 1];
            comboText.pos(xFrom, yFrom);
            comboText.pivotX = comboText.width / 2.0;
            comboText.pivotY = comboText.height / 2.0;
            var props = { x: xFrom, y: yFrom - 50, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, this._onComboRised, [comboText]) };
            Laya.Tween.to(comboText, props, 500);
        }
    };
    playground.prototype._onComboRised = function (text) {
        this._playergroundView.removeChild(text);
        Laya.Pool.recover('scoreComboText', text);
    };
    playground.prototype._onScoreRised = function (text, scoreAdd) {
        this._playergroundView.removeChild(text);
        Laya.Pool.recover('scoreText', text);
        return;
        var props = { x: this._xScoreTo, y: this._yScoreTo, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, this._onScoreArrived, [text, scoreAdd]) };
        Laya.Tween.to(text, props, 300);
    };
    playground.prototype._onScoreArrived = function (text, scoreAdd) {
        this._playergroundView.removeChild(text);
        Laya.Pool.recover('scoreText', text);
        Laya.stage.event(Consts_1.Events.COMBAT_ADD_SCORE, [scoreAdd]);
    };
    playground.prototype._GenRandomFruit = function (i, j) {
        var validIdx = Math.floor(Math.random() * this._validIdxList.length);
        var fruitIdx = this._validIdxList[validIdx];
        // 记录可随机水果列表
        var btn = this._fruitBtnCache[fruitIdx].pop();
        if (this._fruitBtnCache[fruitIdx].length <= 0) {
            this._validIdxList = this._validIdxList.filter(function (obj) { return obj != fruitIdx; });
        }
        // 水果按钮加入到场景
        this._playergroundView.addChild(btn);
        btn.pos(this.unitW * (i + 0.5), this.unitH * (j + 0.5));
        btn.tag = [fruitIdx, i, j];
        this._fruteMap[i][j] = btn;
        this._Debug(btn);
        return btn;
    };
    playground.prototype._RemoveFruit = function (btn) {
        // 从场景去除
        this._playergroundView.removeChild(btn);
        // 添加回缓存池
        btn.scaleX = btn.scaleY = 1.0;
        if (this._fruitBtnCache[btn.tag[0]].length == 0) {
            this._validIdxList.push(btn.tag[0]);
        }
        this._fruitBtnCache[btn.tag[0]].push(btn);
    };
    playground.prototype._BtnMoveTo = function (btn, iTo, jTo, duration) {
        Consts_1.Global.freezeCount++;
        var i = btn.tag[1], j = btn.tag[2];
        var xTo = this.unitW * (iTo + 0.5), yTo = this.unitH * (jTo + 0.5);
        if (duration <= 0) {
            btn.pos(xTo, yTo);
            this._onComplete(btn, iTo, jTo, true);
        }
        else {
            // 从固定速度改成固定时间
            var di = iTo - i, dj = jTo - j;
            var duration_1 = Math.sqrt(di * di + dj * dj) * 200;
            var props = { x: xTo, y: yTo, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, this._onComplete, [btn, iTo, jTo]) };
            Laya.Tween.to(btn, props, duration_1);
        }
    };
    playground.prototype._onComplete = function (btn, iTo, jTo, directly) {
        if (directly === void 0) { directly = false; }
        btn.tag = [btn.tag[0], iTo, jTo];
        this._fruteMap[iTo][jTo] = btn;
        this._Debug(btn);
        Consts_1.Global.freezeCount--;
        if (Consts_1.Global.freezeCount == 0 && !directly) {
            if (!this._CheckResult())
                Consts_1.Global.canOperate = true;
        }
    };
    playground.prototype._GetNeighbour = function (originalFruitIdx, i, j, btnList, flag) {
        // 超出边界 或 已经访问过
        if (i < 0 || i >= this.COUNT_W || j < 0 || j >= this.COUNT_H || flag[i][j] == true) {
            return;
        }
        var btn = this._fruteMap[i][j];
        // 不是同一种水果就返回
        if (btn.tag[0] != originalFruitIdx) {
            return;
        }
        flag[i][j] = true;
        btnList.push(btn);
        for (var _i = 0, _a = [[1, 0], [0, 1], [-1, 0], [0, -1]]; _i < _a.length; _i++) {
            var delta = _a[_i];
            this._GetNeighbour(originalFruitIdx, i + delta[0], j + delta[1], btnList, flag);
        }
    };
    playground.prototype._XtoI = function (x) {
        return Math.round(x / this.unitW - 0.5);
    };
    playground.prototype._YtoJ = function (y) {
        return Math.round(y / this.unitH - 0.5);
    };
    playground.prototype._ItoX = function (i) {
        return this.unitW * (i + 0.5);
    };
    playground.prototype._JtoY = function (j) {
        return this.unitH * (j + 0.5);
    };
    playground.prototype._Debug = function (btn) {
        return;
        btn.label = btn.tag[0] + ' ' + btn.tag[1] + ' ' + btn.tag[2];
        btn.labelSize = 30;
    };
    return playground;
}(Laya.Script));
exports.default = playground;
},{"../data/Player":13,"./../data/Consts":12}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Replay = /** @class */ (function (_super) {
    __extends(Replay, _super);
    function Replay() {
        return _super.call(this) || this;
    }
    Replay.prototype.onEnable = function () {
        // 部件获取
        this._dialog = this.owner;
        this._btnClose = this._dialog.getChildByName('btnClose');
        this._btnClose.on(Laya.Event.CLICK, this, this._btnCloseClick);
        this._btnBack = this._dialog.getChildByName('btnBack');
        this._btnBack.on(Laya.Event.CLICK, this, this._btnBackClick);
        this._btnReplay = this._dialog.getChildByName('btnReplay');
        this._btnReplay.on(Laya.Event.CLICK, this, this._btnReplayClick);
    };
    Replay.prototype.onDisable = function () {
    };
    Replay.prototype._btnCloseClick = function () {
        this._dialog.close();
    };
    Replay.prototype._btnBackClick = function () {
        Laya.Dialog.closeAll();
        Laya.Scene.open('entry/entry.scene', true);
        // 播放音乐
        laya.media.SoundManager.playMusic('custom/hall_bg.mp3');
    };
    Replay.prototype._btnReplayClick = function () {
        Laya.Dialog.closeAll();
        Laya.Scene.open('combat/combat.scene', true);
    };
    return Replay;
}(Laya.Script));
exports.default = Replay;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./../data/Consts");
var Player_1 = require("../data/Player");
var ScoreBoard = /** @class */ (function (_super) {
    __extends(ScoreBoard, _super);
    function ScoreBoard() {
        var _this = _super.call(this) || this;
        _this._score = 0;
        _this._turns = 0;
        return _this;
    }
    ScoreBoard.prototype.onEnable = function () {
        // 获取组件
        this._scoreBoard = this.owner;
        this._textScore = this._scoreBoard.getChildByName('whiteBoard').getChildByName('text');
        this._textScore.text = '0';
        this._textTurns = this._scoreBoard.getChildByName('yellowTube').getChildByName('text');
        this._turns = Player_1.default.getInstance().missionTurns;
        this._textTurns.text = String(this._turns);
        // 注册加分事件
        Laya.stage.on(Consts_1.Events.COMBAT_ADD_SCORE, this, this._addScore);
        // 注册轮数改变事件
        Laya.stage.on(Consts_1.Events.COMBAT_MISSION, this, this._changeTurns);
        // 监听按钮
        var btnReplay = this._scoreBoard.getChildByName('btnReplay');
        btnReplay.on(Laya.Event.CLICK, this, this._replay);
        var muteBtn = this._scoreBoard.getChildByName('btnMute');
        muteBtn.on(Laya.Event.CLICK, this, this._mute);
    };
    ScoreBoard.prototype.onDisable = function () {
    };
    ScoreBoard.prototype._addScore = function (scoreAdd) {
        this._score += scoreAdd;
        this._textScore.text = String(this._score);
    };
    ScoreBoard.prototype._changeTurns = function (turns) {
        Consts_1.Global.statisticLeftTurns = turns;
        var n = Math.floor((100 - Consts_1.Global.statisticLeftTurns) / 10.0);
        var newTurnsScore = n * (n + 1) / 2.0 * 700;
        if (newTurnsScore != Consts_1.Global.statisticTurnsScore) {
            Laya.stage.event(Consts_1.Events.COMBAT_ADD_SCORE, [newTurnsScore - Consts_1.Global.statisticTurnsScore]);
            Consts_1.Global.statisticTurnsScore = newTurnsScore;
        }
        this._turns = turns;
        this._textTurns.text = String(this._turns);
    };
    ScoreBoard.prototype._replay = function () {
        Laya.Dialog.open('combat/replay.scene', false);
    };
    ScoreBoard.prototype._mute = function () {
        Player_1.default.getInstance().soundSwitch = !Player_1.default.getInstance().soundSwitch;
        laya.media.SoundManager.soundMuted = !Player_1.default.getInstance().soundSwitch;
        laya.media.SoundManager.musicMuted = !Player_1.default.getInstance().soundSwitch;
        if (Player_1.default.getInstance().soundSwitch) {
            laya.media.SoundManager.playMusic('custom/combat_bg.mp3');
        }
    };
    ScoreBoard.prototype._backToEntry = function () {
        Laya.Scene.open('entry/entry.scene', true);
        // 播放音乐
        laya.media.SoundManager.playMusic('custom/hall_bg.mp3');
    };
    return ScoreBoard;
}(Laya.Script));
exports.default = ScoreBoard;
},{"../data/Player":13,"./../data/Consts":12}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("../data/Consts");
var Player_1 = require("../data/Player");
var Settlement = /** @class */ (function (_super) {
    __extends(Settlement, _super);
    function Settlement() {
        var _this = _super.call(this) || this;
        _this._infoSeq = [];
        return _this;
    }
    Settlement.prototype.onEnable = function () {
        // 获取组件
        this._dialog = this.owner;
        this._btnBack = this._dialog.getChildByName('btnBack');
        this._btnBack.on(Laya.Event.CLICK, this, this._btnBackClick);
        this._btnBack.alpha = 0;
        this._btnReplay = this._dialog.getChildByName('btnReplay');
        this._btnReplay.on(Laya.Event.CLICK, this, this._btnReplayClick);
        this._btnReplay.alpha = 0;
        for (var i = 1; i < 9; i++) {
            for (var j = 1; j < 4; j++) {
                var childName = 'info' + i + '' + j;
                var child = this._dialog.getChildByName(childName);
                child.alpha = 0;
                this._infoSeq.push(child);
            }
        }
        // “新” 显示数组初始化
        var breakRecords = [];
        // 设置值: 0-基础得分，1-连击得分，2-轮数得分，3-总计得分，4-额外时间，5-最高连击，6-获取金币
        var totalScore = Consts_1.Global.statisticBasicScore + Consts_1.Global.statisticComboScore + Consts_1.Global.statisticTurnsScore;
        var totalGold = Math.round(totalScore / 100.0);
        var val;
        // 0-基础得分
        this._infoSeq[3 * 0 + 1].text = '' + Consts_1.Global.statisticBasicScore;
        var res = Consts_1.Global.statisticBasicScore > Player_1.default.getInstance().getAchievement(0);
        if (res)
            Player_1.default.getInstance().setAchievement(0, Consts_1.Global.statisticBasicScore);
        breakRecords.push(res);
        // 1-连击得分
        this._infoSeq[3 * 1 + 1].text = '' + Consts_1.Global.statisticComboScore;
        res = Consts_1.Global.statisticComboScore > Player_1.default.getInstance().getAchievement(1);
        if (res)
            Player_1.default.getInstance().setAchievement(1, Consts_1.Global.statisticComboScore);
        breakRecords.push(res);
        // 2-轮数得分
        this._infoSeq[3 * 2 + 1].text = '' + Consts_1.Global.statisticTurnsScore;
        res = Consts_1.Global.statisticTurnsScore > Player_1.default.getInstance().getAchievement(2);
        if (res)
            Player_1.default.getInstance().setAchievement(2, Consts_1.Global.statisticTurnsScore);
        breakRecords.push(res);
        if (99 - Consts_1.Global.statisticLeftTurns > Player_1.default.getInstance().missionCompleteTurns) {
            Player_1.default.getInstance().missionCompleteTurns = 99 - Consts_1.Global.statisticLeftTurns;
        }
        // 3-总计得分
        this._infoSeq[3 * 3 + 1].text = '' + totalScore;
        res = totalScore > Player_1.default.getInstance().getAchievement(3);
        if (res) {
            Player_1.default.getInstance().setAchievement(3, totalScore);
            Player_1.default.getInstance().highScore = totalScore;
        }
        breakRecords.push(res);
        // 3.1-排名统计
        var x = totalScore / 1000.0;
        var level = Math.floor(4.0 * x);
        if (x > 10) {
            level = Math.min(Math.floor(25 * Math.pow(x, 0.3)), 100);
        }
        this._infoSeq[3 * 4 + 1].text = level + '%';
        res = level > Player_1.default.getInstance().level;
        if (res) {
            Player_1.default.getInstance().level = level;
        }
        breakRecords.push(res);
        // 4-额外时间
        val = Number(Consts_1.Global.statisticExtraTime.toFixed(1));
        this._infoSeq[3 * 5 + 1].text = val + '秒';
        res = val > Player_1.default.getInstance().getAchievement(4);
        if (res) {
            Player_1.default.getInstance().setAchievement(4, val);
            Player_1.default.getInstance().highTime = Consts_1.Consts.COMBAT_TIME + val;
        }
        breakRecords.push(res);
        // 5-最高连击
        val = Consts_1.Global.statisticMaxComboCount;
        this._infoSeq[3 * 6 + 1].text = '' + val;
        res = val > Player_1.default.getInstance().getAchievement(5);
        if (res) {
            Player_1.default.getInstance().setAchievement(5, val);
            Player_1.default.getInstance().highCombo = val;
        }
        breakRecords.push(res);
        // 6-获取金币
        this._infoSeq[3 * 7 + 1].text = '' + totalGold;
        res = totalGold > Player_1.default.getInstance().getAchievement(6);
        if (res) {
            Player_1.default.getInstance().setAchievement(6, totalGold);
            Player_1.default.getInstance().totalGold = totalGold;
        }
        breakRecords.push(res);
        Player_1.default.getInstance().gold += totalGold;
        Player_1.default.getInstance().totalGold += totalGold;
        //其它设置
        Player_1.default.getInstance().totalRound += 1;
        // 开始播放结算
        this._onInfoComplete(0, breakRecords);
    };
    Settlement.prototype.onDisable = function () {
    };
    Settlement.prototype._onInfoComplete = function (idx, breakRecords) {
        // 没有破纪录就跳过新显示
        if (idx % 3 == 2 && !breakRecords[Math.floor(idx / 3)]) {
            this._onInfoComplete(idx + 1, breakRecords);
            return;
        }
        // 显示其他
        var duration = 500;
        if (idx >= this._infoSeq.length) {
            if (idx > this._infoSeq.length)
                return;
            // 3.1-排名统计
            var playerLevel = Player_1.default.getInstance().level;
            var levelStageBefore = Player_1.default.getInstance().levelStage;
            var levelStageAfter = 4;
            for (var i = 0; i < Consts_1.Consts.LEVEL_TH.length; i++) {
                if (playerLevel >= Consts_1.Consts.LEVEL_TH[i]) {
                    levelStageAfter = i;
                    break;
                }
            }
            if (levelStageAfter < levelStageBefore) {
                Player_1.default.getInstance().levelStage = levelStageAfter;
                Laya.Scene.open('combat/levelUp.scene', false, [levelStageBefore, levelStageAfter]);
            }
            var props_1 = { alpha: 1.0, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, undefined) };
            Laya.Tween.to(this._btnBack, props_1, duration);
            Laya.Tween.to(this._btnReplay, props_1, duration);
            return;
        }
        var idxAdd;
        if (idx % 3 == 0)
            idxAdd = 2;
        else
            idxAdd = 1;
        var props = { alpha: 1.0, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, this._onInfoComplete, [idx + idxAdd, breakRecords]) };
        Laya.Tween.to(this._infoSeq[idx], props, duration);
        if (idx % 3 == 0) {
            props = { alpha: 1.0, ease: Laya.Ease.linearOut, complete: Laya.Handler.create(this, undefined) };
            Laya.Tween.to(this._infoSeq[idx + 1], props, duration);
        }
    };
    Settlement.prototype._btnBackClick = function () {
        Laya.Dialog.closeAll();
        Laya.Scene.open('entry/entry.scene', true);
        // 播放音乐
        laya.media.SoundManager.playMusic('custom/hall_bg.mp3');
    };
    Settlement.prototype._btnReplayClick = function () {
        Laya.Dialog.closeAll();
        Laya.Scene.open('combat/combat.scene', true);
    };
    return Settlement;
}(Laya.Script));
exports.default = Settlement;
},{"../data/Consts":12,"../data/Player":13}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./../data/Consts");
var TimeBar = /** @class */ (function (_super) {
    __extends(TimeBar, _super);
    function TimeBar() {
        return _super.call(this) || this;
    }
    TimeBar.prototype.onEnable = function () {
        this._timeBar = this.owner;
        // 创建 bomb
        this._bomb = this._timeBar.getChildByName('bomb');
        this._bombBasic = this._createBomb(Consts_1.Consts.BombURL[0]);
        this._bombExpert = this._createBomb(Consts_1.Consts.BombURL[1]);
        this._bomb.addChild(this._bombBasic);
        this._bombBasic.pos(this._bomb.width / 2.0, this._bomb.height / 2.0);
        // 创建 时间进度条
        this._full = this._timeBar.getChildByName('full');
        this._fullWidth = this._full.width;
        this._fullLastWidth = this._full.width;
        this._speed = 1.0 / Consts_1.Consts.COMBAT_TIME;
        // 监听额外时间
        Laya.stage.on(Consts_1.Events.COMBAT_EXTRA_TIME, this, this._addExtraTime);
    };
    TimeBar.prototype.onDisable = function () {
    };
    TimeBar.prototype.onUpdate = function () {
        if (Consts_1.Global.timeUp)
            return;
        this._fullLastWidth = this._full.width;
        var width = this._full.width - this._speed * Laya.timer.delta / 1000.0 * this._fullWidth;
        // 更新 total time tick
        Consts_1.Global.totalTickTime += Laya.timer.delta;
        if (width < 0.0) {
            Consts_1.Global.timeUp = true;
            return;
        }
        this._full.width = width;
        var threshold = 0.3 * this._fullWidth;
        if (this._fullLastWidth > threshold && this._full.width <= threshold) {
            this._bomb.removeChild(this._bombBasic);
            this._bomb.addChild(this._bombExpert);
            this._bombExpert.pos(this._bomb.width / 2.0, this._bomb.height / 2.0);
        }
        else if (this._fullLastWidth <= threshold && this._full.width > threshold) {
            this._bomb.removeChild(this._bombExpert);
            this._bomb.addChild(this._bombBasic);
            this._bombBasic.pos(this._bomb.width / 2.0, this._bomb.height / 2.0);
        }
    };
    TimeBar.prototype._createBomb = function (url) {
        var bombImage = new Laya.Image(url);
        bombImage.width = bombImage.height = this._bomb.width;
        bombImage.anchorX = bombImage.anchorY = 0.5;
        return bombImage;
    };
    TimeBar.prototype._addExtraTime = function (extraTime) {
        if (Consts_1.Global.timeUp)
            return;
        var lastWidth = this._full.width;
        this._full.width = Math.min(this._fullWidth, this._full.width + extraTime * this._speed * this._fullWidth);
        Consts_1.Global.statisticExtraTime += (this._full.width - lastWidth) / this._fullWidth / this._speed;
        // console.log('????', this._full.width - lastWidth, Global.statisticExtraTime);
    };
    return TimeBar;
}(Laya.Script));
exports.default = TimeBar;
},{"./../data/Consts":12}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyDialogUI = layaMaxUI_1.ui.common.infoUI;
var MyDialog = /** @class */ (function (_super) {
    __extends(MyDialog, _super);
    function MyDialog() {
        return _super.call(this) || this;
    }
    MyDialog.prototype.onOpened = function (param) {
        this.info.text = param;
        this.btnClose.on(Laya.Event.CLICK, this, this._clickClose);
    };
    MyDialog.prototype._clickClose = function () {
        this.close();
    };
    return MyDialog;
}(MyDialogUI));
exports.default = MyDialog;
},{"../ui/layaMaxUI":20}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Events = /** @class */ (function (_super) {
    __extends(Events, _super);
    function Events() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Events.COMBAT_ADD_SCORE = 'combat_add_score';
    Events.COMBAT_COMPLETE_TASK = 'combat_complete_task';
    Events.COMBAT_MISSION = 'combat_mission';
    Events.COMBAT_EXTRA_TIME = 'combat_extra_time';
    Events.COMBAT_REFRESH = 'combat_refresh';
    return Events;
}(Laya.Script));
exports.Events = Events;
var ItemPrice = /** @class */ (function (_super) {
    __extends(ItemPrice, _super);
    function ItemPrice() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemPrice.FRUIT = [20, 50, 100, 200, 500, 1000, 2000, 3000, 5000];
    ItemPrice.MISSION = [20, 50, 100, 200, 500, 1000, 2000, 3000, 5000];
    ItemPrice.COMBO = [50, 100, 200, 500, 1000, 2000, 3000, 5000, 10000];
    ItemPrice.TIME = [50, 100, 200, 500, 1000, 2000, 3000, 5000, 10000];
    return ItemPrice;
}(Laya.Script));
exports.ItemPrice = ItemPrice;
var Consts = /** @class */ (function (_super) {
    __extends(Consts, _super);
    function Consts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Consts.GetFruitURL = function (i) {
        return Consts.FruitURLArray[i];
    };
    Consts.LEVEL_TH = [91, 61, 31, 0];
    Consts.LEVEL_ICON = ['custom/Bonus_4_2.png', 'custom/Bonus_3_2.png', 'custom/Bonus_1_2.png', 'custom/Bonus_2_2.png'];
    Consts.LEVEL_COLOR = ['#f69950', '#846e6e', '#82492f', '#e86563', '#FFD700',];
    Consts.LEVEL_NAME = ['水果王者', '水果骑士', '水果勇士', '水果萌新'];
    Consts.UP_TYPE = ['custom/Bonus_4_4.png', 'custom/Bonus_3_4.png', 'custom/Bonus_1_4.png', null];
    Consts.TOTAL_TURNS = 99;
    Consts.COMBAT_TIME = 50.0;
    Consts.COMBO_COLOR = ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#218868', '#436EEE', '#836FFF', '#EEE685'];
    Consts.FruitURLArray = ['custom/characters_0001.png', 'custom/characters_0002.png',
        'custom/characters_0003.png', 'custom/characters_0004.png', 'custom/characters_0005.png',
        'custom/characters_0006.png', 'custom/characters_0007.png'];
    Consts.TurnsURL = 'custom/inGame_counter.png';
    Consts.CloseBtnURL = 'custom/button_close.png';
    Consts.BombURL = ['custom/bomb_basic.png', 'custom/bomb_expert.png'];
    Consts.ButtonURL = 'custom/button_9slice_double.png';
    Consts.ShopLvURL = 'custom/iconLevel.png';
    Consts.SOUND_BOMB_LIST = ['custom/e1.mp3', 'custom/e2.mp3', 'custom/e3.mp3', 'custom/e4.mp3', 'custom/e5.mp3', 'custom/e6.mp3', 'custom/e7.mp3'];
    Consts.SOUND_REFRESH = 'custom/ee.mp3';
    return Consts;
}(Laya.Script));
exports.Consts = Consts;
var CombatStates = /** @class */ (function (_super) {
    __extends(CombatStates, _super);
    function CombatStates() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CombatStates.Prepare = 0;
    CombatStates.Playing = 1;
    CombatStates.Settlement = 2;
    return CombatStates;
}(Laya.Script));
exports.CombatStates = CombatStates;
var Global = /** @class */ (function (_super) {
    __extends(Global, _super);
    function Global() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Global.init = function () {
        Global.totalTickTime = 0;
        Global.combatStates = CombatStates.Prepare;
        Global.timeUp = false;
        Global.canOperate = false;
        Global.freezeCount = 0;
        Global.statisticBasicScore = 0;
        Global.statisticComboScore = 0;
        Global.statisticExtraTime = 0;
        Global.statisticMaxComboCount = 0;
        Global.statisticTurnsScore = 0;
        Global.statisticLeftTurns = 99;
    };
    return Global;
}(Laya.Script));
exports.Global = Global;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./Consts");
var Player = /** @class */ (function (_super) {
    __extends(Player, _super);
    function Player() {
        var _this = _super.call(this) || this;
        _this._level = 0;
        _this._levelStage = 3;
        _this._gold = 0;
        _this._totalGold = 0;
        _this._missionLv = 0;
        _this._missionTurns = Consts_1.Consts.TOTAL_TURNS;
        _this._missionCompleteTurns = 0;
        _this._fruitLvArray = [];
        _this._comboLv = 0;
        _this._extraTimeLv = 0;
        _this._achievement = [];
        _this._highScore = 0;
        _this._highCombo = 0;
        _this._highTime = 0;
        _this._totalRound = 0;
        _this._soundSwitch = true;
        // 水果等级
        for (var i = 0; i < Consts_1.Consts.FruitURLArray.length; i++) {
            _this._fruitLvArray[i] = 0;
        }
        // 成就：0-基础得分0 ，1-连击得分，2-轮数得分，3-总计得分，4-额外时间，5-最高连击，6-获取金币
        for (var i = 0; i < 7; i++) {
            _this._achievement[i] = 0;
        }
        // 从硬盘读数据
        _this._loadData();
        // 播放音乐
        laya.media.SoundManager.playMusic('custom/hall_bg.mp3');
        return _this;
    }
    Player.getInstance = function () {
        if (!this.instance) {
            this.instance = new Player();
        }
        return this.instance;
    };
    Player.prototype._storeData = function (name, val) {
        if (val == null || val == undefined || val == '')
            return;
        Laya.LocalStorage.setItem(name, JSON.stringify(val));
    };
    Player.prototype._loadData = function () {
        // Laya.LocalStorage.clear();
        var res;
        res = this._getData("level");
        if (res)
            this.level = res;
        res = this._getData("levelStage");
        if (res)
            this.levelStage = res;
        res = this._getData("gold");
        if (res)
            this.gold = res;
        res = this._getData("totalGold");
        if (res)
            this.totalGold = res;
        res = this._getData("missionLv");
        if (res)
            this.missionLv = res;
        res = this._getData("missionCompleteTurns");
        if (res)
            this.missionCompleteTurns = res;
        res = this._getData("fruitLvArray");
        if (res)
            this._fruitLvArray = res;
        res = this._getData("achievement");
        if (res)
            this._achievement = res;
        res = this._getData("comboLv");
        if (res)
            this.comboLv = res;
        res = this._getData("extraTimeLv");
        if (res)
            this.extraTimeLv = res;
        res = this._getData("highScore");
        if (res)
            this.highScore = res;
        res = this._getData("highCombo");
        if (res)
            this.highCombo = res;
        res = this._getData("highTime");
        if (res)
            this.highTime = res;
        res = this._getData("totalRound");
        if (res)
            this.totalRound = res;
    };
    Player.prototype._getData = function (name) {
        var res = Laya.LocalStorage.getItem(name);
        if (res == null || res == undefined || res == '')
            return null;
        return JSON.parse(res);
    };
    Player.prototype.onEnable = function () {
    };
    Player.prototype.onDisable = function () {
    };
    Object.defineProperty(Player.prototype, "level", {
        get: function () { return this._level; },
        set: function (level) {
            this._level = level;
            this._storeData("level", level);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "levelStage", {
        get: function () { return this._levelStage; },
        set: function (levelStage) {
            this._levelStage = levelStage;
            this._storeData("levelStage", levelStage);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "gold", {
        get: function () { return this._gold; },
        set: function (gold) {
            this._gold = gold;
            this._storeData("gold", gold);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Object.defineProperty(Player.prototype, "totalGold", {
        get: function () { return this._totalGold; },
        set: function (totalGold) {
            this._totalGold = totalGold;
            this._storeData("totalGold", totalGold);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Object.defineProperty(Player.prototype, "missionLv", {
        get: function () { return this._missionLv; },
        set: function (lv) {
            this._missionLv = lv;
            this._storeData("missionLv", lv);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Object.defineProperty(Player.prototype, "missionTurns", {
        get: function () { return Consts_1.Consts.TOTAL_TURNS - this._missionLv; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "missionCompleteTurns", {
        get: function () { return this._missionCompleteTurns; },
        set: function (turns) {
            this._missionCompleteTurns = turns;
            this._storeData("missionCompleteTurns", turns);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Player.prototype.getFruitLv = function (i) { return this._fruitLvArray[i]; };
    ;
    Player.prototype.getFruitLvRatio = function (i) { return 1.0 + this._fruitLvArray[i] * 1.0; };
    Player.prototype.setFruitLv = function (i, lv) {
        this._fruitLvArray[i] = lv;
        this._storeData("fruitLvArray", this._fruitLvArray);
    };
    ;
    Object.defineProperty(Player.prototype, "comboLv", {
        get: function () { return this._comboLv; },
        set: function (comboLv) {
            this._comboLv = comboLv;
            this._storeData("comboLv", this._comboLv);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "comboLvRatio", {
        get: function () { return 1.0 + this._comboLv * 1.0; },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Object.defineProperty(Player.prototype, "extraTimeLv", {
        get: function () { return this._extraTimeLv; },
        set: function (extraTimeLv) {
            this._extraTimeLv = extraTimeLv;
            this._storeData("extraTimeLv", this._extraTimeLv);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "extraTimeLvRatio", {
        get: function () {
            var seconds = Consts_1.Global.totalTickTime / 1000.0;
            return (1.0 + this._extraTimeLv * 0.5) * 1.0 / (Math.floor(seconds / 10.0) + 1.0);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Player.prototype.getAchievement = function (i) { return this._achievement[i]; };
    ;
    Player.prototype.setAchievement = function (i, val) {
        this._achievement[i] = val;
        this._storeData("achievement", this._achievement);
    };
    ;
    Object.defineProperty(Player.prototype, "highScore", {
        get: function () { return this._highScore; },
        set: function (val) {
            this._highScore = val;
            this._storeData("highScore", this._highScore);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "highCombo", {
        get: function () { return this._highCombo; },
        set: function (val) {
            this._highCombo = val;
            this._storeData("highCombo", this._highCombo);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "highTime", {
        get: function () { return this._highTime; },
        set: function (val) {
            this._highTime = val;
            this._storeData("highTime", this._highTime);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "totalRound", {
        get: function () { return this._totalRound; },
        set: function (val) {
            this._totalRound = val;
            this._storeData("totalRound", this._totalRound);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Player.prototype, "soundSwitch", {
        get: function () { return this._soundSwitch; },
        set: function (val) {
            this._soundSwitch = val;
        },
        enumerable: true,
        configurable: true
    });
    ;
    return Player;
}(Laya.Script));
exports.default = Player;
},{"./Consts":12}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BtnStart = /** @class */ (function (_super) {
    __extends(BtnStart, _super);
    function BtnStart() {
        var _this = _super.call(this) || this;
        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        _this.intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        _this.numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        _this.strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        _this.boolType = true;
        return _this;
    }
    BtnStart.prototype.onAwake = function () {
        this._btn = this.owner;
        this._btn.on(Laya.Event.CLICK, this, this._BtnStartClick);
    };
    BtnStart.prototype.onEnable = function () {
    };
    BtnStart.prototype.onDisable = function () {
    };
    BtnStart.prototype._BtnStartClick = function () {
        Laya.Scene.open('combat/combat.scene', false);
    };
    return BtnStart;
}(Laya.Script));
exports.default = BtnStart;
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./../data/Consts");
var Player_1 = require("../data/Player");
var Entry = /** @class */ (function (_super) {
    __extends(Entry, _super);
    function Entry() {
        return _super.call(this) || this;
    }
    Entry.prototype.onEnable = function () {
        this._entryScene = this.owner;
        var entryMenu = this._entryScene.getChildAt(4);
        // 商店
        this._shopBtn = this._entryScene.getChildByName('btnShop');
        this._shopBtn.on(Laya.Event.CLICK, this, this._enterShop);
        // 排名
        this._rankBtn = entryMenu.getChildByName('btnRank');
        this._rankBtn.on(Laya.Event.CLICK, this, this._rank);
        // 信息
        this._infoBtn = entryMenu.getChildByName('btnInfo');
        this._infoBtn.on(Laya.Event.CLICK, this, this._info);
        // 静音
        this._muteBtn = entryMenu.getChildByName('btnMute');
        this._muteBtn.on(Laya.Event.CLICK, this, this._mute);
        // 等级
        this._levelBtn = this._entryScene.getChildByName('btnLevel');
        this._levelBtn.on(Laya.Event.MOUSE_DOWN, this, this._levelBtnDown);
        this._levelBtn.on(Laya.Event.MOUSE_UP, this, this._levelBtnUp, [true]);
        this._levelBtn.on(Laya.Event.MOUSE_OUT, this, this._levelBtnUp, [false]);
        // 加载资源
        Laya.loader.load(Consts_1.Consts.FruitURLArray.concat([Consts_1.Consts.TurnsURL, Consts_1.Consts.CloseBtnURL]).concat(Consts_1.Consts.BombURL));
        // 显示等级
        var playerLevelStage = Player_1.default.getInstance().levelStage;
        this._levelBtn.skin = Consts_1.Consts.LEVEL_ICON[playerLevelStage];
    };
    Entry.prototype.onDisable = function () {
    };
    Entry.prototype._enterShop = function () {
        // console.log('?????');
        // Laya.Scene.open('wxopen/wxOpen.scene', true);
        Laya.Scene.open('shop/shop.scene', false);
    };
    Entry.prototype._rank = function () {
        Laya.Scene.open('entry/ownerInfoLevel.scene', false);
    };
    Entry.prototype._info = function () {
        Laya.Scene.open('entry/info.scene', false);
    };
    Entry.prototype._mute = function () {
        Player_1.default.getInstance().soundSwitch = !Player_1.default.getInstance().soundSwitch;
        laya.media.SoundManager.soundMuted = !Player_1.default.getInstance().soundSwitch;
        laya.media.SoundManager.musicMuted = !Player_1.default.getInstance().soundSwitch;
        if (Player_1.default.getInstance().soundSwitch) {
            laya.media.SoundManager.playMusic('custom/hall_bg.mp3');
        }
    };
    Entry.prototype._levelBtnDown = function () {
        this._levelBtn.scale(0.8, 0.8);
    };
    Entry.prototype._levelBtnUp = function (valid) {
        this._levelBtn.scale(1.0, 1.0);
        if (valid) {
            Laya.Scene.open('entry/infoLevel.scene', false);
        }
    };
    return Entry;
}(Laya.Script));
exports.default = Entry;
},{"../data/Player":13,"./../data/Consts":12}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyDialogUI = layaMaxUI_1.ui.entry.infoUI;
var Player_1 = require("../data/Player");
var InfoStatistic = /** @class */ (function (_super) {
    __extends(InfoStatistic, _super);
    function InfoStatistic() {
        return _super.call(this) || this;
    }
    InfoStatistic.prototype.onOpened = function (param) {
        this.highScore.text = String(Player_1.default.getInstance().highScore);
        this.highCombo.text = String(Player_1.default.getInstance().highCombo);
        this.highTurns.text = String(Player_1.default.getInstance().missionCompleteTurns);
        this.highTime.text = String(Player_1.default.getInstance().highTime);
        this.totalGold.text = String(Player_1.default.getInstance().totalGold);
        this.totalRound.text = String(Player_1.default.getInstance().totalRound);
        // 关闭按钮事件
        this.btnClose.on(Laya.Event.CLICK, this, this._clickClose);
    };
    InfoStatistic.prototype._clickClose = function () {
        this.close();
    };
    return InfoStatistic;
}(MyDialogUI));
exports.default = InfoStatistic;
},{"../data/Player":13,"../ui/layaMaxUI":20}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyDialogUI = layaMaxUI_1.ui.entry.infoLevelUI;
var InfoLevel = /** @class */ (function (_super) {
    __extends(InfoLevel, _super);
    function InfoLevel() {
        return _super.call(this) || this;
    }
    InfoLevel.prototype.onOpened = function (param) {
        this.btnClose.on(Laya.Event.CLICK, this, this._clickClose);
    };
    InfoLevel.prototype._clickClose = function () {
        this.close();
    };
    return InfoLevel;
}(MyDialogUI));
exports.default = InfoLevel;
},{"../ui/layaMaxUI":20}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyDialogUI = layaMaxUI_1.ui.entry.ownerInfoLevelUI;
var Player_1 = require("../data/Player");
var Consts_1 = require("../data/Consts");
var ownerInfoLevel = /** @class */ (function (_super) {
    __extends(ownerInfoLevel, _super);
    function ownerInfoLevel() {
        return _super.call(this) || this;
    }
    ownerInfoLevel.prototype.onOpened = function (param) {
        // 显示等级
        var playerLevelStage = Player_1.default.getInstance().levelStage;
        this.image.skin = Consts_1.Consts.LEVEL_ICON[playerLevelStage];
        this.textName.text = Consts_1.Consts.LEVEL_NAME[playerLevelStage];
        this.textRank.text = Player_1.default.getInstance().level + '%';
        this.btnClose.on(Laya.Event.CLICK, this, this._clickClose);
    };
    ownerInfoLevel.prototype._clickClose = function () {
        this.close();
    };
    return ownerInfoLevel;
}(MyDialogUI));
exports.default = ownerInfoLevel;
},{"../data/Consts":12,"../data/Player":13,"../ui/layaMaxUI":20}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Consts_1 = require("./../data/Consts");
var Player_1 = require("./../data/Player");
var Shop = /** @class */ (function (_super) {
    __extends(Shop, _super);
    function Shop() {
        var _this = _super.call(this) || this;
        // item 相关
        _this._itemArray = [];
        _this._itemLvText = [];
        _this._itemPriceText = [];
        return _this;
    }
    Shop.prototype.onEnable = function () {
        var _a, _b, _c, _d;
        this._shopScene = this.owner;
        // 加载商店物品
        for (var i = 0; i < 11; i++) {
            var item = this._shopScene.getChildByName('item' + String(i));
            if (!item)
                break;
            this._itemArray.push(item);
        }
        var itemLv, itemPrice, lv;
        for (var i = 0; i < this._itemArray.length; i++) {
            var item = this._itemArray[i];
            if (!item)
                break;
            // 水果
            if (i < Consts_1.Consts.FruitURLArray.length) {
                lv = Player_1.default.getInstance().getFruitLv(i);
                _a = this._initItem(item, Consts_1.Consts.GetFruitURL(i), lv), itemLv = _a[0], itemPrice = _a[1];
                itemPrice.text = '' + Consts_1.ItemPrice.FRUIT[lv];
            }
            // 任务
            else if (i == Consts_1.Consts.FruitURLArray.length) {
                lv = Player_1.default.getInstance().missionLv;
                console.log('1111111', lv);
                _b = this._initItem(item, undefined, lv), itemLv = _b[0], itemPrice = _b[1];
                itemPrice.text = '' + Consts_1.ItemPrice.MISSION[lv];
            }
            // 连击
            else if (i == Consts_1.Consts.FruitURLArray.length + 1) {
                lv = Player_1.default.getInstance().comboLv;
                _c = this._initItem(item, undefined, lv), itemLv = _c[0], itemPrice = _c[1];
                itemPrice.text = '' + Consts_1.ItemPrice.COMBO[lv];
            }
            // 时间
            else if (i == Consts_1.Consts.FruitURLArray.length + 2) {
                lv = Player_1.default.getInstance().extraTimeLv;
                _d = this._initItem(item, undefined, lv), itemLv = _d[0], itemPrice = _d[1];
                itemPrice.text = '' + Consts_1.ItemPrice.TIME[lv];
            }
            this._itemLvText.push(itemLv);
            this._itemPriceText.push(itemPrice);
            itemLv.text = '' + lv;
        }
        // 更新金币
        var board = this.owner.getChildByName('goldBoard');
        this._goldText = board.getChildByName('whiteBoard').getChildByName('text');
        // 监听事件
        for (var i = 0; i < this._itemArray.length; i++) {
            var item = this._itemArray[i];
            var btnBuy = item.getChildByName('btnMain');
            btnBuy.on(Laya.Event.CLICK, this, this._buyItem, [i]);
        }
        // 排名
        this._rankBtn = board.getChildByName('rank');
        this._rankBtn.on(Laya.Event.CLICK, this, this._rank);
        // 信息
        this._infoBtn = board.getChildByName('info');
        this._infoBtn.on(Laya.Event.CLICK, this, this._info);
        // 静音
        this._muteBtn = board.getChildByName('mute');
        this._muteBtn.on(Laya.Event.CLICK, this, this._mute);
        // 加载退出按钮
        this._initBackBtn();
        // 刷新商店页面数值状态
        this._refreshItemState();
    };
    Shop.prototype.onDisable = function () {
    };
    Shop.prototype._buyItem = function (idx) {
        console.log('3333', Laya.LocalStorage.getItem('missionLv'));
        var item = this._itemArray[idx];
        var price = Number(this._itemPriceText[idx].text);
        var lv = Player_1.default.getInstance().getFruitLv(idx);
        if (idx == Consts_1.Consts.FruitURLArray.length) {
            lv = Player_1.default.getInstance().missionLv;
        }
        else if (idx == Consts_1.Consts.FruitURLArray.length + 1) {
            lv = Player_1.default.getInstance().comboLv;
        }
        else if (idx == Consts_1.Consts.FruitURLArray.length + 2) {
            lv = Player_1.default.getInstance().extraTimeLv;
        }
        if (Player_1.default.getInstance().gold < price)
            return;
        Player_1.default.getInstance().gold -= price;
        lv += 1;
        this._itemLvText[idx].text = String(lv);
        if (lv <= Consts_1.ItemPrice.FRUIT.length) {
            if (idx < Consts_1.Consts.FruitURLArray.length) {
                Player_1.default.getInstance().setFruitLv(idx, lv);
                this._itemPriceText[idx].text = String(Consts_1.ItemPrice.FRUIT[lv]);
            }
            else if (idx == Consts_1.Consts.FruitURLArray.length) {
                Player_1.default.getInstance().missionLv = lv;
                this._itemPriceText[idx].text = String(Consts_1.ItemPrice.MISSION[lv]);
            }
            else if (idx == Consts_1.Consts.FruitURLArray.length + 1) {
                Player_1.default.getInstance().comboLv = lv;
                this._itemPriceText[idx].text = String(Consts_1.ItemPrice.COMBO[lv]);
            }
            else if (idx == Consts_1.Consts.FruitURLArray.length + 2) {
                Player_1.default.getInstance().extraTimeLv = lv;
                this._itemPriceText[idx].text = String(Consts_1.ItemPrice.TIME[lv]);
            }
        }
        this._refreshItemState();
    };
    Shop.prototype._rank = function () {
        Laya.Scene.open('entry/info.scene', false);
    };
    Shop.prototype._info = function () {
        Laya.Scene.open('entry/ownerInfoLevel.scene', false);
    };
    Shop.prototype._mute = function () {
        laya.media.SoundManager.stopAllSound();
        laya.media.SoundManager.stopMusic();
    };
    Shop.prototype._refreshItemState = function () {
        // 刷新金币数
        this._goldText.text = String(Player_1.default.getInstance().gold);
        // 刷新商品可购买状态
        for (var i = 0; i < this._itemArray.length; i++) {
            var item = this._itemArray[i];
            item.disabled = Number(this._itemPriceText[i].text) > Player_1.default.getInstance().gold;
            // 水果
            if (i < Consts_1.Consts.FruitURLArray.length) {
                if (Player_1.default.getInstance().getFruitLv(i) >= Consts_1.ItemPrice.FRUIT.length) {
                    this._maxDisableBtn(item);
                }
            }
            // 任务
            else if (i == Consts_1.Consts.FruitURLArray.length) {
                if (Player_1.default.getInstance().missionLv >= Consts_1.ItemPrice.MISSION.length) {
                    this._maxDisableBtn(item);
                }
            }
            // 连击
            else if (i == Consts_1.Consts.FruitURLArray.length + 1) {
                if (Player_1.default.getInstance().comboLv >= Consts_1.ItemPrice.COMBO.length) {
                    this._maxDisableBtn(item);
                }
            }
            // 时间
            else if (i == Consts_1.Consts.FruitURLArray.length + 2) {
                if (Player_1.default.getInstance().extraTimeLv >= Consts_1.ItemPrice.TIME.length) {
                    this._maxDisableBtn(item);
                }
            }
        }
    };
    Shop.prototype._maxDisableBtn = function (item) {
        item.disabled = true;
        var btnBuy = item.getChildByName('btnMain');
        var text = btnBuy.getChildByName('text');
        text.text = 'MAX';
    };
    Shop.prototype._initItem = function (item, url, lv) {
        // 创建默认商店物品
        if (url) {
            var itemInfoBtn = new Laya.Button(url);
            var itemInfo = item.getChildByName('info');
            itemInfo.addChild(itemInfoBtn);
            itemInfoBtn.stateNum = 1;
            itemInfoBtn.anchorX = itemInfoBtn.anchorY = 0.5;
            itemInfoBtn.width = itemInfoBtn.height = Math.min(itemInfo.width, itemInfo.height);
            itemInfoBtn.pos(itemInfo.width / 2.0, itemInfo.height / 2.0);
        }
        // 设置无法购买
        item.disabled = true;
        // 设置等级
        var itemLv = item.getChildByName('star').getChildByName('text');
        itemLv.text = String(lv);
        // 返回信息
        var priceText = item.getChildByName('btnMain').getChildByName('text');
        return [itemLv, priceText];
    };
    Shop.prototype._initBackBtn = function () {
        var closeBtn = new Laya.Button(Consts_1.Consts.CloseBtnURL);
        this._shopScene.addChild(closeBtn);
        closeBtn.stateNum = 2;
        closeBtn.pos(this._shopScene.width * 0.08, this._shopScene.height * 0.04);
        closeBtn.anchorX = 0.5;
        closeBtn.anchorY = 0.5;
        closeBtn.width = closeBtn.height = this._shopScene.width * 0.18;
        closeBtn.on(Laya.Event.CLICK, this, this._btnBackToEntry);
    };
    Shop.prototype._btnBackToEntry = function () {
        Laya.Scene.open('entry/entry.scene', true);
    };
    return Shop;
}(Laya.Script));
exports.default = Shop;
},{"./../data/Consts":12,"./../data/Player":13}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var combat;
    (function (combat) {
        var levelUpUI = /** @class */ (function (_super) {
            __extends(levelUpUI, _super);
            function levelUpUI() {
                return _super.call(this) || this;
            }
            levelUpUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("combat/levelUp");
            };
            return levelUpUI;
        }(Laya.Dialog));
        combat.levelUpUI = levelUpUI;
        REG("ui.combat.levelUpUI", levelUpUI);
    })(combat = ui.combat || (ui.combat = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var infoUI = /** @class */ (function (_super) {
            __extends(infoUI, _super);
            function infoUI() {
                return _super.call(this) || this;
            }
            infoUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("common/info");
            };
            return infoUI;
        }(Laya.Dialog));
        common.infoUI = infoUI;
        REG("ui.common.infoUI", infoUI);
    })(common = ui.common || (ui.common = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var entry;
    (function (entry) {
        var infoUI = /** @class */ (function (_super) {
            __extends(infoUI, _super);
            function infoUI() {
                return _super.call(this) || this;
            }
            infoUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("entry/info");
            };
            return infoUI;
        }(Laya.Dialog));
        entry.infoUI = infoUI;
        REG("ui.entry.infoUI", infoUI);
        var infoLevelUI = /** @class */ (function (_super) {
            __extends(infoLevelUI, _super);
            function infoLevelUI() {
                return _super.call(this) || this;
            }
            infoLevelUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("entry/infoLevel");
            };
            return infoLevelUI;
        }(Laya.Dialog));
        entry.infoLevelUI = infoLevelUI;
        REG("ui.entry.infoLevelUI", infoLevelUI);
        var ownerInfoLevelUI = /** @class */ (function (_super) {
            __extends(ownerInfoLevelUI, _super);
            function ownerInfoLevelUI() {
                return _super.call(this) || this;
            }
            ownerInfoLevelUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("entry/ownerInfoLevel");
            };
            return ownerInfoLevelUI;
        }(Laya.Dialog));
        entry.ownerInfoLevelUI = ownerInfoLevelUI;
        REG("ui.entry.ownerInfoLevelUI", ownerInfoLevelUI);
    })(entry = ui.entry || (ui.entry = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var wxopen;
    (function (wxopen) {
        var wxOpenUI = /** @class */ (function (_super) {
            __extends(wxOpenUI, _super);
            function wxOpenUI() {
                return _super.call(this) || this;
            }
            wxOpenUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("wxopen/wxOpen");
            };
            return wxOpenUI;
        }(Laya.Dialog));
        wxopen.wxOpenUI = wxOpenUI;
        REG("ui.wxopen.wxOpenUI", wxOpenUI);
    })(wxopen = ui.wxopen || (ui.wxopen = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyDialogUI = layaMaxUI_1.ui.wxopen.wxOpenUI;
var MyDialog = /** @class */ (function (_super) {
    __extends(MyDialog, _super);
    function MyDialog() {
        return _super.call(this) || this;
    }
    MyDialog.prototype.onOpened = function (param) {
        console.log("mylog------:" + JSON.stringify("onOpened"));
        this.openDataView.postMsg("test10086");
    };
    return MyDialog;
}(MyDialogUI));
exports.default = MyDialog;
},{"../ui/layaMaxUI":20}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
